<!--
	Copyright (C) 2012-2016 Trier Center for Digital Humanities, Trier (Germany)

	This file is part of the Online Transcription Editor (OTE).

    OTE is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 2.1 of the License, or
    (at your option) any later version.

    OTE is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with OTE.  If not, see <http://www.gnu.org/licenses/>.

    Diese Datei ist Teil des Online-Transkriptions-Editor (OTE).

    OTE ist Freie Software: Sie können es unter den Bedingungen
    der GNU Lesser General Public License, wie von der Free Software Foundation,
    Version 2.1 der Lizenz oder (nach Ihrer Wahl) jeder späteren
    veröffentlichten Version, weiterverbreiten und/oder modifizieren.

    OTE wird in der Hoffnung, dass es nützlich sein wird, aber
    OHNE JEDE GEWÄHRLEISTUNG, bereitgestellt; sogar ohne die implizite
    Gewährleistung der MARKTFÄHIGKEIT oder EIGNUNG FÜR EINEN BESTIMMTEN ZWECK.
    Siehe die GNU Lesser General Public License für weitere Details.

    Sie sollten eine Kopie der GNU Lesser General Public License zusammen mit diesem
    Programm erhalten haben. Wenn nicht, siehe <http://www.gnu.org/licenses/>.
-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<title>{#reading_title}</title>
		<script type="text/javascript" src="../../js/tinymce/tinymce.js"></script>
		<script type="text/javascript" src="../jquery.js"></script>
		<script type="text/javascript" src="js/wce.js"></script>
		<link rel="stylesheet" type="text/css" href="../skin/dialog.css"/>
		<link rel="stylesheet" type="text/css" href="../skin/ui.css"/>
	</head>

    <body id="table">
        <form onsubmit="insertTable();return false;" action="#"
        name="readinginfo" style="margin: 0; padding: 0">
            <input type="button" id="help" name="help" value="{#help}"
				onclick="wce_openWindow('docu.htm#corrections')" />
			<fieldset style="width: 150px; float: left; height: 525px">
                <legend>
                    {#reading_list}
                </legend>
                <div style="text-align: left">
                    <button onclick="if (testOther()){addCorrector(); selectCorrItem();}else{alert('{#empty_other}');};return false;">
				{#new_hand}
				</button>
                </div>
                <div style="height: 445px; overflow: auto">
                    <ul id="correction_ul"
                    style="list-style-position: inside; list-style-type: none; margin: 0px; padding: 10px"></ul>
                </div>
            </fieldset>
            <fieldset id="content_fieldset"
            style="margin-left: 200px; height: 525px; width: auto">
                <legend>
                    {#reading_data}
                </legend>
                <input type="hidden" id="original_firsthand_reading" name="original_firsthand_reading"/>
				<input type="hidden" id="common_firsthand_partial" name="common_firsthand_partial"/>
				<div style="height: 495px; overflow: auto">
                    <table border="0" cellpadding="4" cellspacing="0" width="100%">
                        <tr>
                            <td><label id="reading_label" for="reading">{#reading_type}</label></td>
                            <td colspan="2">
                            <select id="reading" name="reading">
                                <option value="corr">{#correction}</option>
                                <option value="comm">{#commentary}</option>
                                <option value="alt">{#alternative}</option>
                            </select></td>
                        </tr>
                        <tr>
                            <td><label id="firsthand_label" name="firsthand_label" for="firsthand_reading"> {#firsthand_reading}</label></td>
                            <td colspan="1">
				<label id="firsthand_reading" name="firsthand_reading" style="color: green"></label>
				</td>
                            <td>
                            <input type="checkbox" name="blank_firsthand"
                            id="blank_firsthand" onclick="checkstatus_firsthand()">
                            {#blank_firsthand} </td>
							<td>
                            <input type="checkbox" name="ut_videtur_firsthand"
                            id="ut_videtur_firsthand">
                            {#ut_videtur} </td>
                        </tr>
                        <tr>
                            <td><label id="corrector_name_label" for="corrector_name">{#corrector_name}</label></td>
                            <td>
                            <select id="corrector_name" name="corrector_name"
                            onclick="saveCurrCorrector(true);" onchange="checkstatus_hand()">
                                <option value="corrector">{#corrector}</option>
                                <option value="firsthand">{#firsthand}</option>
                                <option value="corrector1">{#corrector}1</option>
                                <option value="corrector2">{#corrector}2</option>
                                <option value="corrector3">{#corrector}3</option>
                                <option value="other">{#other}</option>
                            </select></td>
                            <td>
                            <input id="corrector_name_other" name="corrector_name_other"
                            onkeyup="saveCurrCorrector(true);" type="text" value="" size="20" />
                            </td>
							<td>
                            <input type="checkbox" name="ut_videtur_corr"
                            id="ut_videtur_corr">
                            {#ut_videtur} </td>
                        </tr>
                        <tr>
                            <td colspan="2">
                            <input type="checkbox" name="blank_correction"
                            id="blank_correction"
                            onclick="checkstatus_correction()">
                            {#blank_correction} </td>
                        </tr>
                        <tr>
                            <td><label id="place_corr_label" for="place_corr">{#corrector_place}</label></td>
                            <td colspan="1">
                            <select id="place_corr" name="place_corr" onchange="checkstatus_corr_position()">
                                <option value=""></option>
                                <option value="pagetop">{#position_pagetop}</option>
                                <option value="pagebottom">{#position_pagebottom}</option>
                                <option value="pageleft">{#position_pageleft}</option>
                                <option value="pageright">{#position_pageright}</option>
                                <option value="coltop">{#position_coltop}</option>
                                <option value="colbottom">{#position_colbottom}</option>
                                <option value="colleft">{#position_colleft}</option>
                                <option value="colright">{#position_colright}</option>
                                <option value="lineleft">{#position_lineleft}</option>
                                <option value="lineright">{#position_lineright}</option>
                                <option value="above">{#position_above}</option>
                                <option value="below">{#position_below}</option>
                                <option value="overwritten">{#position_overwritten}</option>
                                <option value="other">{#other}</option>
                            </select></td>
                            <td>
                            <input id="place_corr_other"
                            name="place_corr_other" type="text" value="" size="20"
                            maxlength="" class="required number min1 mceFocus" />
                            </td>
                        </tr>
                        <tr>
                            <td><label id="deletion_label" for="deletion">{#deletion}</label></td>
                            <td colspan="2">
                            <input type="hidden" id="deletion_erased" name="deletion_erased" value="" />
                            <input type="hidden" id="deletion_underline" name="deletion_underline" value="" />
                            <input type="hidden" id="deletion_underdot" name="deletion_underdot" value="" />
                            <input type="hidden" id="deletion_overdot" name="deletion_overdot" value="" />
							<input type="hidden" id="deletion_strikethrough" name="deletion_strikethrough" value="" />
                            <input type="hidden" id="deletion_vertical_line" name="deletion_vertical_line" value="" />
                            <input type="hidden" id="deletion_deletion_hooks" name="deletion_deletion_hooks" value="" />
                            <input type="hidden" id="deletion_transposition_marks" name="deletion_transposition_marks" value="" />
                            <input type="hidden" id="deletion_other" name="deletion_other" value="" />
                            <select id="deletion" size="6" multiple="multiple" onchange="checkstatus_deletion()" onmouseover="XBT(this, {id:'corr_deletion'})">
                                <option value="erased">{#del_erased}</option>
                                <option value="underline">{#del_underline}</option>
                                <option value="underdot">{#del_underdot}</option>
								<option value="overdot">{#del_overdot}</option>
                                <option value="strikethrough">{#del_striketrough}</option>
                                <option value="vertical_line">{#del_vertical_line}</option>
                                <option value="deletion_hooks">{#del_deletion_hooks}</option>
                                <option value="transposition_marks">{#del_transposition_marks}</option>
                                <option value="other">{#other}</option>
                            </select></td>
                        </tr>
                        <div id="corr_deletion" class="xbtooltip">
                            {#tt_corr_deletion}
                        </div>
                        <tr>
                            <td><label id="firsthand_partial_label" for="firsthand_partial">{#firsthand_partial}</label></td>
                            <td>
                            <select id="firsthand_partial" name="firsthand_partial" onchange="$('#common_firsthand_partial').val($('#firsthand_partial').val());">
                                <option value="">{#corr_partial_complete}</option>
                                <option value="I">{#corr_partial_beginning}</option>
                                <option value="F">{#corr_partial_end}</option>
                            </select></td>
                            <td align="right"><label id="partial_label" for="partial">{#correction_partial}</label></td>
                            <td>
                            <select id="partial" name="partial">
                                <option value="">{#corr_partial_complete}</option>
                                <option value="I">{#corr_partial_beginning}</option>
                                <option value="F">{#corr_partial_end}</option>
                            </select></td>
                        </tr>
						<tr>
                            <td colspan="5"><label id="corrector_text_label" for="corrector_text">{#corrector_text}</label></td>
                        </tr>
                        <tr>
                            <td colspan="5">
								<textarea WRAP="PHYSICAL" ROWS="4" style="width:100%" id="corrector_text" name="corrector_text"></textarea>
							</td>
                        </tr>
                    </table>
                </div>
                <div style="height: 20px;">
                    <input type="reset" id="corr_reset" style="display: none"
                    value="Reset" />
                    <input type="button"
                    onclick="$('#corr_reset').click();saveCurrCorrector();"
                    value="Reset" />
                </div>
            </fieldset>
            <div class="mceActionPanel" id="mceActionPanel">
                <input type="button" id="insert" name="insert" value="{#insert}"
                onclick="if (testOther_insert()){saveCurrCorrector(); writeWceNodeInfo();}else{alert('{#empty_other}');}" />
                <input type="button" id="cancel" name="cancel" value="{#cancel}"
                onclick="parent.tinymce.activeEditor.windowManager.close();" />
            </div>
        </form>
    </body>
    <script type="text/javascript">
		//corrector_text as a tinymce-editor
		var corrector_text_editor;
		$(document).ready(function() {
			// TODO: fix this in wce.js. currently we're settin global ed variable.
			ed = parent.tinymce.activeEditor;
			translate();
			setConstants();
			corrector_text_editor = new tinymce.Editor('corrector_text', {
				clientOptions: ed.settings.clientOptions,
				mode : "textareas",
				theme : "modern",
				menubar: false,
				skin_url: "../skin/",
				extended_valid_elements : 'span[class|wce_orig|style|wce|id|ext]',
				forced_root_block : false,
				force_br_newlines : true,
				force_p_newlines : false,
				entity_encoding : "raw",
				theme_advanced_path : false,
				plugins : "pagebreak,print,paste",
				external_plugins: { 'wce' : '../../wce-ote/plugin/plugin.js' },
				internal_editor: true,
				toolbar : "undo redo charmap | code removeformat | print contextmenu paste fullscreen | "+
					"breaks illegible decoration abbreviation paratext punctuation",

				setup : function(ed) {
					ed.on('change', saveCurrCorrector);
				}
			}, tinymce.EditorManager);
			corrector_text_editor.on('init', function () {
					comboBindReturnEvent('insert');
					wceInfoInit('corr');
/* TODO: check this
					if ($.browser.safari) {
						$('#content_fieldset').css('width', $('#mceActionPanel').width() - 250);
					}
*/

					for (var p in info_arr) {
						addCorrector(p);
					}

					if (item_counter == -1) {//no corrector name given yet
						$('#firsthand_reading').html(selected_content);
						$('#original_firsthand_reading').val(selected_content); //Save initial value for later use
						addCorrector();
					}

					selectCorrItem();

					if (item_counter > -1) {//Use old value; needs this position, because otherwise the correct value is not available
						$('#firsthand_reading').html($('#original_firsthand_reading').val());
					}

					$(':input').on('change', function() {
						saveCurrCorrector();
					});

					setstatus_deletion();
					checkstatus_corr_position();
					checkstatus_hand();
					checkstatus_firsthand();
					checkstatus_correction();

					if (document.getElementById('corrector_text_adaptive_selection')) {
						document.getElementById('corrector_text_adaptive_selection').checked = false;
					}
					else console.log('no adaptive selection control found');
					//deactivate adaptive selection here by default

					$('#corrector_text_ifr').contents().find('#tinymce').css('font-family',
						parent.$('#wce_editor_ifr').contents().find('#tinymce').css('font-family'));

					corrector_text_editor.focus();
				});
			corrector_text_editor.render();
		});


		function translate() {
			var c=document.body.innerHTML;
			var d=document.title;
			var a;
			if(parent.tinymce.isIE){c=c.replace(/ (value|title|alt)=([^"][^\s>]+)/gi,' $1="$2"')}
			a=c.replace(/\{\#([^\}]+)\}/g, function(a, b) {
				var c=parent.tinymce.translate(b);
				return (c != b) ? c : '{#' + b + '}';
			});
			if(a!=c){document.body.innerHTML=a}
			a=d.replace(/\{\#([^\}]+)\}/g, function(a, b) {
				var c=parent.tinymce.translate(b);
				return (c != b) ? c : '{#' + b + '}';
			});
			if(a!=d){document.title=d=a}
		}

		function testOther() {
			if ((document.readinginfo.corrector_name.selectedIndex != -1 &&
				 document.readinginfo.corrector_name.options[document.readinginfo.corrector_name.selectedIndex].value == 'other' && 
			     document.getElementById('corrector_name_other').value == '') || 
					(document.readinginfo.place_corr.selectedIndex != -1 &&
					 document.readinginfo.place_corr.options[document.readinginfo.place_corr.selectedIndex].value == 'other' && 
					 document.getElementById('place_corr_other').value == ''))
				return false;
			return true;
		}

		function testOther_insert() {
			if (!testOther() || item_counter == -1)// no corrections given
				return false;
			return true;
		}

		function checkstatus_hand() {
			if ($('#corrector_name').val() == 'other') {
				$('#corrector_name_other').attr('disabled', false);
				$('#corrector_name_other').css('background', '#fff');
			} else {
				$('#corrector_name_other').attr('disabled', true);
				$('#corrector_name_other').css('background', '#ccc');
			}
		}

		function checkstatus_firsthand() {
			if (document.readinginfo.blank_firsthand.checked == true) {
				$('#firsthand_reading').css('color', 'lightgray');
			} else {
				$('#firsthand_reading').css('color', 'green');
			}
		}

		function checkstatus_correction() {
			if (document.readinginfo.blank_correction.checked == true) {
				$(tinymce.activeEditor.getBody()).css('color', 'lightgray');
				tinymce.activeEditor.getBody().setAttribute('contenteditable', false);
				$('#corrector_text_toolbargroup').parent().css('display','none');
				$('#place_corr').attr('disabled', true);
			} else {
				if (!$('#content_fieldset').attr('disabled')) {
					$(tinymce.activeEditor.getBody()).css('color', 'black');
					tinymce.activeEditor.getBody().setAttribute('contenteditable', true);
					$('#corrector_text_toolbargroup').parent().css('display','block');
				} else {
					$(tinymce.activeEditor.getBody()).css('color', 'black');
					tinymce.activeEditor.getBody().setAttribute('contenteditable', false);
					$('#corrector_text_toolbargroup').parent().css('display','block');
				}
				$('#place_corr').attr('disabled', false);
			}
		}

		function checkstatus_corr_position() {
			if (document.readinginfo.place_corr.selectedIndex != -1 &&
					document.readinginfo.place_corr.options[document.readinginfo.place_corr.selectedIndex].value == 'other') {
				document.readinginfo.place_corr_other.disabled = false;
				document.getElementById('place_corr_other').style.backgroundColor = "white";
			} else {
				document.readinginfo.place_corr_other.disabled = true;
				document.getElementById('place_corr_other').style.backgroundColor = "#CCCCCC";
			}
		}

		function checkstatus_deletion() {
			const options = document.getElementById('deletion').selectedOptions;
			const values = Array.from(options).map(({ value }) => value);
			if (values.indexOf('deletion_erased'.replace('deletion_', '')) !== -1) {
				document.getElementById('deletion_erased').value = 1;
			} else {
				document.getElementById('deletion_erased').value = 0;
			}
			if (values.indexOf('deletion_underline'.replace('deletion_', '')) !== -1) {
				document.getElementById('deletion_underline').value = 1
			} else {
				document.getElementById('deletion_underline').value = 0;
			}
			if (values.indexOf('deletion_underdot'.replace('deletion_', '')) !== -1) {
				document.getElementById('deletion_underdot').value = 1
			} else {
				document.getElementById('deletion_underdot').value = 0;
			}
			if (values.indexOf('deletion_overdot'.replace('deletion_', '')) !== -1) {
				document.getElementById('deletion_overdot').value = 1
			} else {
				document.getElementById('deletion_overdot').value = 0;
			}
			if (values.indexOf('deletion_strikethrough'.replace('deletion_', '')) !== -1) {
				document.getElementById('deletion_strikethrough').value = 1
			} else {
				document.getElementById('deletion_strikethrough').value = 0;
			}
			if (values.indexOf('deletion_vertical_line'.replace('deletion_', '')) !== -1) {
				document.getElementById('deletion_vertical_line').value = 1
			} else {
				document.getElementById('deletion_vertical_line').value = 0;
			}
			if (values.indexOf('deletion_deletion_hooks'.replace('deletion_', '')) !== -1) {
				document.getElementById('deletion_deletion_hooks').value = 1
			} else {
				document.getElementById('deletion_deletion_hooks').value = 0;
			}
			if (values.indexOf('deletion_transposition_marks'.replace('deletion_', '')) !== -1) {
				document.getElementById('deletion_transposition_marks').value = 1
			} else {
				document.getElementById('deletion_transposition_marks').value = 0;
			}
			if (values.indexOf('deletion_other'.replace('deletion_', '')) !== -1) {
				document.getElementById('deletion_other').value = 1
			} else {
				document.getElementById('deletion_other').value = 0;
			}
		}

		function setstatus_deletion() {
			let values = [];
			const deletionSelect = document.getElementById('deletion');
			if (document.getElementById('deletion_erased').value == 1) {
				values.push('erased');
			}
			if (document.getElementById('deletion_underline').value == 1) {
				values.push('underline');
			}
			if (document.getElementById('deletion_underdot').value == 1) {
				values.push('underdot');
			}
			if (document.getElementById('deletion_overdot').value == 1) {
				values.push('overdot');
			}
			if (document.getElementById('deletion_strikethrough').value == 1) {
				values.push('strikethrough');
			}
			if (document.getElementById('deletion_vertical_line').value == 1) {
				values.push('vertical_line');
			}
			if (document.getElementById('deletion_deletion_hooks').value == 1) {
				values.push('deletion_hooks');
			}
			if (document.getElementById('deletion_transposition_marks').value == 1) {
				values.push('transposition_marks');
			}
			if (document.getElementById('deletion_other').value == 1) {
				values.push('other');
			}
			// now set the right ones to be selected
			for (let i = 0; i < deletionSelect.options.length; i += 1) {
				deletionSelect.options[i].selected = values.indexOf(deletionSelect.options[i].value) >= 0;
			}
		}

		/*
		 * //add new <li> to <ul> /@param class_item: one item from class_name_arr
		 */
		function addCorrector(_id, corrector_name) {
			// default name of new corrector
			if (corrector_name == null) {
				corrector_name = 'new corrector';
			}

			$('#corr_reset').click();
			checkstatus_deletion();

			// new corrector
			if (_id == null) {
				item_counter++;
				_id = 'c' + item_counter;
				var first_val = $('#original_firsthand_reading').val();
				if (first_val == '') {
					document.readinginfo.blank_firsthand.checked = true;
					document.readinginfo.blank_firsthand.disabled = true;
				}

				$('#corrector_text').val(first_val);
				corrector_text_editor.setContent(first_val);
				info_arr[_id] = formSerialize(null, corrector_name);
				corrector_name = corrector_name = $('#corrector_name').val();
			} else {
				if ( typeof info_arr[_id] != 'undefined' && info_arr[_id] != '') {
					var param_arr = info_arr[_id].split('&');
					corrector_name = param_arr[1];
					if ( typeof corrector_name != 'undefined') {
						corrector_name = corrector_name.replace('__n=', '');
					}
				}
			}

			$('#correction_ul').append('<li id="' + _id + '" ><img title="Delete" onclick="delCorrector(\'' + _id + '\');" src="img/del.gif" style="cursor:pointer; width:10px; height:10px; margin-right:10px" border="1"  /> <a href="javascript:void(0)" style="text-decoration:none" title="' + _id + '" onclick="selectCorrItem(\'' + _id + '\');">' + corrector_name + '</a></li>');

			checkstatus_firsthand();
			checkstatus_correction();
			checkstatus_corr_position();
			document.readinginfo.firsthand_partial.value=document.readinginfo.common_firsthand_partial.value;
		}

		function delCorrector(_id) {
			$('#' + _id).remove();

			var li_length = $('#correction_ul > li').length;

			if (li_length < 1) {
				$('#content_fieldset').attr('disabled', true);
				curr_item_id = null;
			} else {
				var last_id = $('#correction_ul > li:eq(' + (li_length - 1) + ')').attr('id');
				if (last_id != null) {
					selectCorrItem(last_id);
				} else {
					curr_item_id = null;
				}
			}
			info_arr[_id] = null;
		}

		function saveCurrCorrector(b) {
			if (curr_item_id == null)
				return;

			var corrector_name;
			if (b) {
				corrector_name = $('#corrector_name').val();
				if (corrector_name == 'other') {
					corrector_name = $('#corrector_name_other').val();
					if (corrector_name == '') {
						corrector_name = 'Other';
					}
				}
			} else {
				corrector_name = $('#' + curr_item_id + ' a').eq(0).html();
			}

			info_arr[curr_item_id] = formSerialize(null, corrector_name);
			$('#' + curr_item_id + ' a').html(corrector_name);

		}

		function selectCorrItem(_id) {
			$('#corr_reset').click();

			if (_id == null) {
				_id = 'c' + item_counter;
			}
			curr_item_id = _id;
			$('#correction_ul > li > a').css({
				'color' : '#000',
				'text-decoration' : 'none'
			});
			$('#' + _id + '   a').css({
				'color' : 'blue',
				'text-decoration' : 'underline'
			});
			var str = info_arr[_id];
			if (str == null) {
				$('#corr_reset').click();
			} else {
				formUnserialize(str);
			}
			checkstatus_hand();
			checkstatus_correction();
			setstatus_deletion();
			$('#firsthand_partial').val($('#common_firsthand_partial').val());
		}

		if (!tinyMCE.isIE) {
			$(document).keydown(function(e) {
				var evt = e || window.event
				if ((evt.keyCode == 13 || evt.keyCode == 10) && !evt.shiftKey) {
					document.getElementById('insert').click();
					return false;
				}
			});
		}
    </script>
</html>
